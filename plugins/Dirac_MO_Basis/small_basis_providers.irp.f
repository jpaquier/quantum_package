 BEGIN_PROVIDER [ double precision, small_ao_ortho_canonical_coef, (small_ao_num,small_ao_num)]
 &BEGIN_PROVIDER [ integer, small_ao_ortho_canonical_num ]
  implicit none
  BEGIN_DOC
 !Matrix of the coefficients of the small component MOs generated by the 
 ! orthonormalization by the S^{-1/2} canonical transformation of the small component AOs. 
 !small_ao_ortho_canonical_coef(i,j) = coefficient of the ith small component AO
 ! on the jth small_ao_ortho_canonical orbital
  END_DOC
  integer :: i
  small_ao_ortho_canonical_coef = 0.d0
  do i=1, small_ao_num
    small_ao_ortho_canonical_coef(i,i) = 1.d0
  enddo
  small_ao_ortho_canonical_num = small_ao_num
  call ortho_canonical(small_ao_overlap,size(small_ao_overlap,1), small_ao_num,small_ao_ortho_canonical_coef, size(small_ao_ortho_canonical_coef,1), small_ao_ortho_canonical_num)
 END_PROVIDER
  
 BEGIN_PROVIDER [double precision, small_ao_ortho_canonical_overlap, (small_ao_ortho_canonical_num, small_ao_ortho_canonical_num)]
  implicit none
  BEGIN_DOC
 !Overlap matrix of the small_ao_ortho_canonical.
 !Expected to be the Identity
  END_DOC
  integer                        :: i,j,k,l
  double precision               :: c
  do j=1, small_ao_ortho_canonical_num
    do i=1, small_ao_ortho_canonical_num
      small_ao_ortho_canonical_overlap(i,j) = 0.d0
    enddo
  enddo
  do j=1, small_ao_ortho_canonical_num
    do k=1, small_ao_num
      c = 0.d0
      do l=1, small_ao_num
        c +=  small_ao_ortho_canonical_coef(l,j) * small_ao_overlap(l,k)
      enddo
      do i=1, small_ao_ortho_canonical_num
        small_ao_ortho_canonical_overlap(i,j) += small_ao_ortho_canonical_coef(k,i) * c
      enddo
    enddo
  enddo
 END_PROVIDER

 BEGIN_PROVIDER [ integer, small_mo_tot_num ]
  implicit none
  BEGIN_DOC
  !Number of small component MOs
  END_DOC
  small_mo_tot_num = small_ao_ortho_canonical_num
  ASSERT (small_mo_tot_num > 0)
 END_PROVIDER


 BEGIN_PROVIDER [ double precision, small_mo_coef, (small_ao_num,small_mo_tot_num) ]
  implicit none
  BEGIN_DOC
  !Molecular orbital coefficients on small component AO basis set
  !small_mo_coef(i,j) = coefficient of the ith small component AO on the jth small component MO
  END_DOC
  integer                        :: i, j
  double precision, allocatable  :: buffer(:,:)
  logical                        :: exists
  do i=1,small_mo_tot_num
    do j=1,small_ao_num
      small_mo_coef(j,i) = small_ao_ortho_canonical_coef(j,i)
    enddo
  enddo
 END_PROVIDER


 BEGIN_PROVIDER [double precision, small_ao_ortho_lowdin_coef, (small_ao_num,small_ao_num)]
  implicit none
  BEGIN_DOC
  !Matrix of the coefficients of the mos generated by the Lowdin orthonormalization of the small component AOs
  !ao_ortho_lowdin_coef(i,j) = coefficient of the ith AO on the jth ao_ortho_lowdin orbital
  END_DOC
  integer                        :: i,j,k,l
  double precision               :: accu
  double precision, allocatable  :: tmp_matrix(:,:)
  allocate (tmp_matrix(small_ao_num,small_ao_num))
  tmp_matrix(:,:) = 0.d0
  do j=1, small_ao_num
    tmp_matrix(j,j) = 1.d0
  enddo
  call ortho_lowdin(small_ao_overlap,small_ao_num,small_ao_num,tmp_matrix,small_ao_num,small_ao_num)
  do i=1, small_ao_num
    do j=1, small_ao_num
      small_ao_ortho_lowdin_coef(j,i) = tmp_matrix(i,j)
    enddo
  enddo
  deallocate(tmp_matrix)
 END_PROVIDER

 BEGIN_PROVIDER [double precision, small_ao_ortho_lowdin_overlap, (small_ao_num,small_ao_num)]
  implicit none
  BEGIN_DOC
  !Overlap matrix of the ao_ortho_lowdin
  !Supposed to be the Identity
  END_DOC
  integer                        :: i,j,k,l
  double precision               :: c
  do j=1, small_ao_num
   do i=1,small_ao_num
    small_ao_ortho_lowdin_overlap(i,j) = (0.d0,0.d0)
   enddo
  enddo
  do k=1, small_ao_num
   do j=1, small_ao_num
    c = (0.d0,0.d0)
    do l=1, small_ao_num
     c +=  small_ao_ortho_lowdin_coef(j,l) * small_ao_overlap(k,l)
    enddo
    do i=1, small_ao_num
     small_ao_ortho_lowdin_overlap(i,j) += small_ao_ortho_lowdin_coef(i,k) * c
    enddo
   enddo
  enddo
 END_PROVIDER
